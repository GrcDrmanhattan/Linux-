给定一个二叉树，检查它是否是镜像对称的。

 

例如，二叉树 [1,2,2,3,4,4,3] 是对称的。

    1
   / \
  2   2
 / \ / \
3  4 4  3
 

但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:

    1
   / \
  2   2
   \   \
   3    3

###########################         ######################

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) 
    {
        if(!root) return true;
        return helper(root->left,root->right);
    }

    bool helper(TreeNode* p,TreeNode* q)
    {
        if(!q && !p) return true;
        if(!q || !p) return false;
        if(q->val == p->val) return helper(p->left,q->right) && helper(p->right,q->left);//如果节点相等，继续比较对称的子树
        return false;
    }
};



