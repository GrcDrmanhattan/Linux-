107. 二叉树的层序遍历 II

给定一个二叉树，返回其节点值自底向上的层序遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）

例如：
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其自底向上的层序遍历为：

[
  [15,7],
  [9,20],
  [3]
]

---------------------------------------------------   1224


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 

class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> res;
        if(!root) return res;

        queue<TreeNode*> q;
        q.push(root);

        while(q.size())
        {
            int n=q.size();
            vector<int> tmp;

            while(n--)
            {
                auto t=q.front();
                tmp.push_back(t->val);
                q.pop();

                if(t->left) q.push(t->left);
                if(t->right) q.push(t->right);
            }

            // reverse(tmp.begin(), tmp.end());
            res.push_back(tmp);
        }
        reverse(res.begin(), res.end());
        return res;
    }
};

