5630. 删除子数组的最大得分

给你一个正整数数组 nums ，请你从中删除一个含有 若干不同元素 的子数组。删除子数组的 得分 就是子数组各元素之 和 。

返回 只删除一个 子数组可获得的 最大得分 。

如果数组 b 是数组 a 的一个连续子序列，即如果它等于 a[l],a[l+1],...,a[r] ，那么它就是 a 的一个子数组。

 

示例 1：

输入：nums = [4,2,4,5,6]
输出：17
解释：最优子数组是 [2,4,5,6]
示例 2：

输入：nums = [5,2,1,2,5,2,1,2,5]
输出：8
解释：最优子数组是 [5,2,1] 或 [1,2,5]
 

提示：

1 <= nums.length <= 105
1 <= nums[i] <= 104


---------------------  1221 yxc

// 全是正数，所以区间长度越大，和越大
// 典型的双指针，随着i向后，j也先后走，单调性


class Solution {
public:
    int maximumUniqueSubarray(vector<int>& nums) {
        int n=nums.size();
        unordered_map<int, int> hash;
        int res=0;

        for(int i=0, j=0, s=0;i<n;++i) // 对于每一个终点i，找到起点j
        {
            int x=nums[i];
            hash[x]++; // 加入新元素
            s+=x;// 和加上新元素

            while(hash[x] > 1) // 当加入的新元素次数大于1，重复的一定是新加入当元素i，操作前面当指针j，直到i不重复为止
            {
                s-= nums[j];
                hash[nums[j]] --;
                j++;
            }

            res=max(res, s);
        }
        return res;
    }
};

