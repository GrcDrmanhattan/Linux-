5647. 解码异或后的排列

给你一个整数数组 perm ，它是前 n 个正整数的排列，且 n 是个 奇数 。

它被加密成另一个长度为 n - 1 的整数数组 encoded ，满足 encoded[i] = perm[i] XOR perm[i + 1] 。比方说，如果 perm = [1,3,2] ，那么 encoded = [2,1] 。

给你 encoded 数组，请你返回原始数组 perm 。题目保证答案存在且唯一。

 

示例 1：

输入：encoded = [3,1]
输出：[1,2,3]
解释：如果 perm = [1,2,3] ，那么 encoded = [1 XOR 2,2 XOR 3] = [3,1]
示例 2：

输入：encoded = [6,5,4,6]
输出：[2,4,1,5,3]
 

提示：

3 <= n < 105
n 是奇数。
encoded.length == n - 1

--------------------------------------------- 0125 / 2021 / yxc

// a1  a2  a3 a4 a5

// b0= a1 ^ a2 
// b1= a2 ^ a3 
// b2 = a3 ^ a4
// b3 = a4 ^ a5

// b3 ^ b1 ^ s = a4 ^ a5 ^ a2 ^ a3 ^ s
//           s = a1 ^ a2 ^a3 ^ a4 ^ a5 
// 所以 求得a1,就可以依次求结果



class Solution {
public:
    vector<int> decode(vector<int>& encoded) {
        int n=encoded.size()+1;
        int s=0;
        for(int i=1;i<=n;++i) s^=i;// a1^a2^a3 ... 

        for(int i=encoded.size()-1;i>=0; i-=2) s^=encoded[i]; // s最后就是a1

        vector<int> res(1, s);
        for(int i=0;i<encoded.size();++i) res.push_back(res.back() ^ encoded[i]);

        return res;
    }
};



