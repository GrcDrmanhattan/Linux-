209. 长度最小的子数组

给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的 连续 子数组，并返回其长度。如果不存在符合条件的子数组，返回 0。

 

示例：

输入：s = 7, nums = [2,3,1,2,4,3]
输出：2
解释：子数组 [4,3] 是该条件下的长度最小的子数组。

-----------------   1225/2020   双指针
  
class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        int res=INT_MAX;

        for(int i=0,j=0, sum=0; i<nums.size();++i)
        {
            sum+=nums[i];

            while(sum>=s)
            {
                res=min(res, i-j+1);
                sum-=nums[j];
                j++;
            }

        }
        if(res==INT_MAX) return 0;
        return res;
    }
};



------------------------    yxc  类似的双指针 ，没有区别额

class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        int res=INT_MAX;

        for(int i=0,j=0, sum=0; i<nums.size();++i)
        {
            sum+=nums[i];

            while(sum - nums[j] >=s)  // 试探，如果减去左边界点，还是满足，就减去
            {
                sum -=nums[j];
                j++;
            }

            if(sum >= s) res=min(res, i-j+1);

        }
        if(res==INT_MAX) return 0;
        return res;
    }
};


