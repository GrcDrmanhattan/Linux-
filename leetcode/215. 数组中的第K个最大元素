215. 数组中的第K个最大元素
在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

示例 1:

输入: [3,2,1,5,6,4] 和 k = 2
输出: 5
示例 2:

输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4
说明:

你可以假设 k 总是有效的，且 1 ≤ k ≤ 数组的长度。

------------------------------------ 0210 / 2021/ self


class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int> q;
        for(auto x:nums) q.push(x);

        int cnt=0;
        int res;
        while(q.size())
        {
            res=q.top();
            q.pop();
            cnt++;
            if(cnt==k) break;
        }

        return res;
    }
};



------------------------------ 0210 / 2021/ yxc




// 快速选择算法 O2n

class Solution {
public:
    int help(vector<int>& nums ,int l , int r ,int k)
    {
        if(l==r) return nums[k];//区间只有一个数， 返回nums[k]

        int x=nums[l];
        int i=l-1;
        int j=r+1;

        while(i<j)
        {
            while(nums[++i]>x); // 第k大的元素， 要把符号反转一下
            while(nums[--j]<x);
            if(i<j) swap(nums[i], nums[j]);
        }

        if(k<=j) return help(nums, l ,j, k); // 递归左边
        else return help(nums, j+1, r, k);

    }
    int findKthLargest(vector<int>& nums, int k) {
        return help(nums, 0, nums.size()-1 ,k-1);
    }
};



