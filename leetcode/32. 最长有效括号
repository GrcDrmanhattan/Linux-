32. 最长有效括号

给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号子串的长度。

 

示例 1：

输入：s = "(()"
输出：2
解释：最长有效括号子串是 "()"
示例 2：

输入：s = ")()())"
输出：4
解释：最长有效括号子串是 "()()"
示例 3：

输入：s = ""
输出：0
 

提示：

0 <= s.length <= 3 * 104
s[i] 为 '(' 或 ')'


----------------------------------- 0304 / 2021  / yxc

// 连续的括号


时间On， 每个位置遍历一次，，最多进站一次
空间On



class Solution {
public:
    int longestValidParentheses(string s) {
        int res=0;
        stack<int> st;

        for(int i=0, start = -1; i<s.size();++i)
        {
            if(s[i]=='(') st.push(i);
            else{//右括号
                if(st.size()){
                    st.pop(); // 匹配一个左括号
                    if(st.size()){
                        res=max(res, i-st.top());
                    }else{
                        res=max(res, i-start);
                    }

                }else{
                    start = i;
                }
            }
        }

        return res;
    }
};



---------------- 0306 /2021/ 

class Solution {
public:
    int longestValidParentheses(string s) {
        int res=0;
        stack<int> st;
        int start=-1;

        for(int i=0; i<s.size(); ++i)
        {
            if(s[i]=='(') st.push(i);
            else{
                if(st.size())
                {
                    st.pop();
                    if(st.size()) res=max(res, i-st.top());
                    else res=max(res, i-start);
                }
                else{
                    start= i;
                }
            }
        }

        return res;
    }
};


