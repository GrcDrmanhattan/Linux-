377. 组合总和 Ⅳ

给定一个由正整数组成且不存在重复数字的数组，找出和为给定目标正整数的组合的个数。

示例:

nums = [1, 2, 3]
target = 4

所有可能的组合为：
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)

请注意，顺序不同的序列被视作不同的组合。

因此输出为 7。
进阶：
如果给定的数组中含有负数会怎么样？
问题会产生什么变化？
我们需要在题目中添加什么限制来允许负数的出现？

----------------------- 0308 / 2021  / yxc \

时间On^2

// 背包问题不考虑顺序 
// 这个题需要考虑顺序
// 第一个位置 第二个位置 ，按位置选择

// f[j] :总和为j的所有方案的数量



class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {
        int n=nums.size();
        vector<long long > f(target + 1);
        f[0]=1;

        for(int i=0;i<=target;++i)
            for(auto x:nums)
            {
                if(i >= x)
                {
                    f[i] = (f[i] + f[i-x])%INT_MAX;
                }
            }
        
        return f[target];

    }
};


----------------- 0308 

class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {
        vector<long long > f(target + 1);
        f[0]=1;
        for(int i=0; i<= target;++i)
            for(auto x:nums)
            {
                if(i >= x) 
                    f[i]=(f[i] + f[i-x]) % INT_MAX;
            }
        return f[target];
    }
};

