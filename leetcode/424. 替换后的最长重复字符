424. 替换后的最长重复字符


给你一个仅由大写英文字母组成的字符串，你可以将任意位置上的字符替换成另外的字符，总共可最多替换 k 次。在执行上述操作后，找到包含重复字母的最长子串的长度。

注意:
字符串长度 和 k 不会超过 104。

示例 1:

输入:
s = "ABAB", k = 2

输出:
4

解释:
用两个'A'替换为两个'B',反之亦然。
示例 2:

输入:
s = "AABABBA", k = 1

输出:
4

解释:
将中间的一个'A'替换为'B',字符串变为 "AABBBBA"。
子串 "BBBB" 有最长重复字母, 答案为 4。




----------------------------------------------------------------- 1225 /2020 /yxc   通过双指针维护一个窗口，将窗口不断移动，使得满足题意，最后求满足要求的窗口的最大长度



// 首先枚举出现次数最多的字符c，也就是要将其他字符变成的这个字符

//双指针 维护一个区间使得区间内不等于（次数最多的字符c）的出现次数（i-j+1-cnt） 小于等于k

// cnt窗口内c出现的次数


// 时间 O26n


class Solution {
public:

    int characterReplacement(string s, int k) {
        int res=0;
        
        for(char c='A';c<='Z';++c)
        {
            for(int i=0, j=0, cnt=0;i<s.size(); ++i)
            {
                if(s[i] == c) cnt++;// 字符等于c出现的次数
                
                
                // 计算res前 要看窗口是否合法，不合法就右移动，还要注意更新cnt的数量
                
                while(i-j+1 - cnt >k) // 要改变的字符的数目大于k，不合法，所以窗口右移动
                {
                    if(s[j] == c) cnt--; // 如果等于c，窗口内的c次数cnt--

                    j++;
                }

                res=max(res, i-j+1); // 窗口合法 计算长度
            }
        }

        return res;
    }
};



