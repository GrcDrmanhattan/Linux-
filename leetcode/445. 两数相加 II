445. 两数相加 II

给你两个 非空 链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。

你可以假设除了数字 0 之外，这两个数字都不会以零开头。

 

进阶：

如果输入链表不能修改该如何处理？换句话说，你不能对列表中的节点进行翻转。

 

示例：

输入：(7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 8 -> 0 -> 7

------------------------------------- 0202  /2021 / self 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        auto d=new ListNode(-1);
        auto c=d;
        vector<int> a, b;

        for(auto p=l1;p;p=p->next) a.push_back(p->val);
        for(auto p=l2;p;p=p->next) b.push_back(p->val);

        reverse(a.begin(), a.end());
        reverse(b.begin(), b.end());

        int t=0;
        vector<int> tmp;
        for(int i=0; i<a.size() || i<b.size() || t ;++i)
        {
            if(i<a.size()) t+=a[i];
            if(i<b.size()) t+=b[i];

            tmp.push_back(t%10);

            t/=10;
        }

        reverse(tmp.begin(), tmp.end());
        for(auto x:tmp) c->next=new ListNode(x),c=c->next;
        return d->next;
    }
};



