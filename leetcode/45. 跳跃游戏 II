45. 跳跃游戏 II

给定一个非负整数数组，你最初位于数组的第一个位置。

数组中的每个元素代表你在该位置可以跳跃的最大长度。

你的目标是使用最少的跳跃次数到达数组的最后一个位置。

示例:

输入: [2,3,1,1,4]
输出: 2
解释: 跳到最后一个位置的最小跳跃数是 2。
     从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。
说明:

假设你总是可以到达数组的最后一个位置。



------------------------- 0310 / 2021   yxc



// 图论 每个点有向边，求起点到终点到最短距离， 最坏N^2 tle
// dp, f[i] 起点跳到i最小的步数
// 每段组多扫描两次，O2n

class Solution {
public:
    int jump(vector<int>& nums) {
        int maxv=0;
        int n=nums.size();
        vector<int> f(n);

        for(int i = 1;i<n;++i)
        {
            while(maxv + nums[maxv] < i) maxv++;
            f[i] = f[maxv] + 1;
        }
        return f[n-1];
    }
};





