463. 岛屿的周长

给定一个 row x col 的二维网格地图 grid ，其中：grid[i][j] = 1 表示陆地， grid[i][j] = 0 表示水域。

网格中的格子 水平和垂直 方向相连（对角线方向不相连）。整个网格被水完全包围，但其中恰好有一个岛屿（或者说，一个或多个表示陆地的格子相连组成的岛屿）。

岛屿中没有“湖”（“湖” 指水域在岛屿内部且不和岛屿周围的水相连）。格子是边长为 1 的正方形。网格为长方形，且宽度和高度均不超过 100 。计算这个岛屿的周长。

 

示例 1：



输入：grid = [[0,1,0,0],[1,1,1,0],[0,1,0,0],[1,1,0,0]]
输出：16
解释：它的周长是上面图片中的 16 个黄色的边
示例 2：

输入：grid = [[1]]
输出：4
示例 3：

输入：grid = [[1,0]]
输出：4
 

提示：

row == grid.length
col == grid[i].length
1 <= row, col <= 100
grid[i][j] 为 0 或 1


---------------------------- 0301/ 2021/ yxc

// 循环每个1，如果四周出界或者下一个是0， cnt++；

class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();

        int dx[]={0, 1, 0, -1};
        int dy[]={1, 0, -1, 0};
        int res=0;

        for(int i=0;i<n;++i)
            for(int j=0;j<m;++j)
            {
                if(grid[i][j]==1)
                {
                    for(int u=0;u<4;++u)
                    {
                        int a=i+dx[u];
                        int b=j+dy[u];
                        if(a<0 || a>=n || b<0 || b>=m) res++;
                        else if(grid[a][b]==0) res++;
                    }
                }
            }

        return res;
    }
};


