524. 通过删除字母匹配到字典里最长单词

给定一个字符串和一个字符串字典，找到字典里面最长的字符串，该字符串可以通过删除给定字符串的某些字符来得到。如果答案不止一个，返回长度最长且字典顺序最小的字符串。如果答案不存在，则返回空字符串。

示例 1:

输入:
s = "abpcplea", d = ["ale","apple","monkey","plea"]

输出: 
"apple"
示例 2:

输入:
s = "abpcplea", d = ["a","b","c"]

输出: 
"a"
说明:

所有输入的字符串只包含小写字母。
字典的大小不会超过 1000。
所有输入的字符串长度不会超过 1000。

----------------------------  1226 /yxc /2020


// woc  转换为 判断字典里的字符串是不是s的子序列，
//  时间 字符串平均长度 * 字符串个数


class Solution {
public:


    // On
    bool check(string& a, string& b) // 判断b是否是a子序列 ,a长， b短
    {
        int i=0;
        int j=0;
        while(i<a.size() && j<b.size())
        {
            if(a[i]==b[j])
            {
                i++;
                j++;
            }
            else
            {
                i++;
            }
        }

        return j == b.size();
    }


    string findLongestWord(string s, vector<string>& d) {
        string res;

        for(auto x:d)
        {
            if(check(s, x)) // x是s的子序列
            {
                if(res.empty() || res.size() < x.size() || res.size()==x.size() && res >x)
                    res=x;
            }
        }

        return res;
    }
};




