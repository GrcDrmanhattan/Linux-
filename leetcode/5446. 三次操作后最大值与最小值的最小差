给你一个数组 nums ，每次操作你可以选择 nums 中的任意一个数字并将它改成任意值。

请你返回三次操作后， nums 中最大值与最小值的差的最小值。

 

示例 1：

输入：nums = [5,3,2,4]
输出：0
解释：将数组 [5,3,2,4] 变成 [2,2,2,2].
最大值与最小值的差为 2-2 = 0 。
示例 2：

输入：nums = [1,5,0,10,14]
输出：1
解释：将数组 [1,5,0,10,14] 变成 [1,1,0,1,1] 。
最大值与最小值的差为 1-0 = 1 。


===============================

//  相当于删除三个数，求剩下差的最小值
//只能删除3个，所以排序后删除最大的3个/最大的两个，和最小的1个/最大的一个和最小的2个/最小的3个，最大的0个，
//删除的最小的和最大的个数需要是3个，
//想要结果差值最小的，所以需要大的变小，小的数变大
//所以删除排序后开始和末尾的
class Solution {
public:
    int minDifference(vector<int>& nums) {
        int n = nums.size();
        if (n<=4) return 0;
        
        vector<int> a;
        a.assign(nums.begin(), nums.end());
        sort(a.begin(), a.end());
        int min1 = min(a[n-1] - a[3], a[n-2] - a[2]);
        int min2 = min(a[n-3] - a[1], a[n-4] - a[0]);
        return min(min1, min2);

    }
};
