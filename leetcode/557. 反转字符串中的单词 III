给定一个字符串，你需要反转字符串中每个单词的字符顺序，同时仍保留空格和单词的初始顺序。

示例 1:

输入: "Let's take LeetCode contest"
输出: "s'teL ekat edoCteeL tsetnoc" 

========================================

class Solution 
{
public:
    string reverseWords(string s) 
    {
        string res="";
        string words="";
        for(int i=0;i<s.size();++i)
        {
            char c=s[i];
            if(c!=' ')
            {
                words+=s[i];
                // cout<<words<<endl;
            }
            else
            {
                reverse(words.begin(),words.end());
                // cout<<words<<endl;
                res+=words;
                res+=" ";
                words="";
                // ++i;//   不用++i，多此一举，会从第二个词开始少最后一个字母的
                
            }     
        }
        reverse(words.begin(),words.end());//把最后一个单词加上
        res+=words;
        return res;
    }
};


------------- 1027 / 2021  

class Solution {
public:
    string reverseWords(string s) {
        for(int i=0;i<s.size();++i){
            if(s[i] == ' ') continue;
            int j=i;
            while(j<s.size() && s[j] != ' ') j++;
            reverse(s.begin() + i, s.begin()+j);
            i=j-1;
        }
        return s;
    }
};


