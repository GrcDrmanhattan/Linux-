5652. 交换链表中的节点

给你链表的头节点 head 和一个整数 k 。

交换 链表正数第 k 个节点和倒数第 k 个节点的值后，返回链表的头节点（链表 从 1 开始索引）。

 

示例 1：


输入：head = [1,2,3,4,5], k = 2
输出：[1,4,3,2,5]
示例 2：

输入：head = [7,9,6,6,7,8,3,0,9,5], k = 5
输出：[7,9,6,6,8,7,3,0,9,5]
示例 3：

输入：head = [1], k = 1
输出：[1]
示例 4：

输入：head = [1,2], k = 1
输出：[2,1]
示例 5：

输入：head = [1,2,3], k = 2
输出：[1,2,3]
 

提示：

链表中节点的数目是 n
1 <= k <= n <= 105
0 <= Node.val <= 100

----------------------------- 0110 /2021 /self

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
 
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        int l=0;
        for(auto t=head;t;t=t->next ) l++;
        
        auto t=head;
        for(int i=0;i<k-1;++i) t=t->next;
        
        auto p=head;
        for(int i=0;i<l-k;++i) p=p->next;
        
        swap(p->val, t->val);
        return head;
    }
};




--------------------------- yxc



class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        vector<int> a;
        for(auto p=head;p;p=p->next) a.push_back(p->val);
        
        
        swap(a[k-1], a[a.size()-k]);
        
        auto h=new ListNode(a[0]);
        
        auto cur=h;
        for(int i=1;i<a.size();++i)
        {
            cur->next = new ListNode(a[i]);
            cur=cur->next;
        }
        
        return h;
    }
};





