567. 字符串的排列

给定两个字符串 s1 和 s2，写一个函数来判断 s2 是否包含 s1 的排列。

换句话说，第一个字符串的排列之一是第二个字符串的子串。

示例1:

输入: s1 = "ab" s2 = "eidbaooo"
输出: True
解释: s2 包含 s1 的排列之一 ("ba").
 

示例2:

输入: s1= "ab" s2 = "eidboaoo"
输出: False
 

注意：

输入的字符串只包含小写字母
两个字符串的长度都在 [1, 10,000] 之间

--------------  1228 /2020/ yxc  滑动窗口 ，维护一个窗口， 就是看出现的字母的次数是否相等，通过窗口来保持符合一个排列

h1维护s1的次数 h2维护窗口内字母的次数，要和h1相等在是一个排列


class Solution {   
public:
    unordered_map<char ,int> h1, h2; // h2窗口内的次数
     
    bool check(char c)
    {
        if(h1.count(c) && h2[c] == h1[c]) return true;// 判断字母的柱子是否在h1和h2是否相等
        return false;
    }

    bool checkInclusion(string s1, string s2) {
        int n = s1.size();
        int m = s2.size();
        
        for(auto x:s1) h1[x]++;

        for(int i=0, j=0, cnt=0; i<m;++i)
        {
            if(check(s2[i])) cnt--;
            h2[s2[i]]++;
            if(check(s2[i])) cnt++;

            if(i-j >= n) // 维护长度和s1相等的窗口, // 过大了，要缩小窗口
            {
                if(check(s2[j])) cnt--;
                h2[s2[j]]--;
                if(check(s2[j])) cnt++;
                j++;
            }


            if(cnt == h1.size()) return true;   
        }

        return false;
    }
};




