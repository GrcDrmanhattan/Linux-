576. 出界的路径数

给定一个 m × n 的网格和一个球。球的起始坐标为 (i,j) ，你可以将球移到相邻的单元格内，或者往上、下、左、右四个方向上移动使球穿过网格边界。但是，你最多可以移动 N 次。找出可以将球移出边界的路径数量。答案可能非常大，返回 结果 mod 109 + 7 的值。

 

示例 1：

输入: m = 2, n = 2, N = 2, i = 0, j = 0
输出: 6
解释:

示例 2：

输入: m = 1, n = 3, N = 3, i = 0, j = 1
输出: 12
解释:

 

说明:

球一旦出界，就不能再被移动回网格内。
网格的长度和高度在 [1,50] 的范围内。
N 在 [0,50] 的范围内。

--------------------------------------------- 0116  / 2021 / yxc

// dp f[i][j][k] 表示从边界走k步到达ij点的所有方案数
// 反向 从边界走到ij
// 最坏 4^n 种方案数

const int md=1e9+7;

class Solution {
public:
    int findPaths(int m, int n, int N, int x, int y) {
        if(N==0) return 0;
        vector<vector<vector<int>>> f(m, vector<vector<int>>(n, vector<int>(N+1)));
        
        for(int i=0;i<n;++i)
        {
            f[0][i][1]++;
            f[m-1][i][1]++;
        }

        for(int i=0;i<m;++i)
        {
            f[i][0][1]++;
            f[i][n-1][1]++;
        }

        int dx[4]={0,1,0,-1};
        int dy[4]={1,0,-1,0};

        for(int k=1;k<=N;++k)
            for(int i=0;i<m;++i)
                for(int j=0;j<n;++j)
                    for(int u=0;u<4;++u)
                    {
                        int a=i+dx[u];
                        int b=j+dy[u];
                        if(a>=0 && a<m && b>=0 &&b<n) (f[i][j][k] += f[a][b][k-1])%= md;
                    }

        int res=0;
        for(int i=1;i<=N;++i)
            (res += f[x][y][i]) %= md;

        return res;
    }
};





