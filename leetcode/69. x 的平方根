69. x 的平方根

实现 int sqrt(int x) 函数。

计算并返回 x 的平方根，其中 x 是非负整数。

由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。

示例 1:

输入: 4
输出: 2
示例 2:

输入: 8
输出: 2
说明: 8 的平方根是 2.82842..., 
     由于返回类型是整数，小数部分将被舍去。


###################################

// #include<algorithm>
// class Solution {
// public:
//     int mySqrt(int x) {
//         // return sqrt(x);
//         if(x==0||x==1) return x;
//         long long i=0;
//         long long j=x/2+1;
//         while(i<=j)
//         {
//             long long m=(i+j)/2;
//             if(m==x/m) return m;
//             if(m<x/m) i=m+1;
//             if(m>x/m) j=m-1;
//         }
//         return j;
//     }
// };

// class Solution
// {
// public:
//     int mySqrt(int x)
//     {
//         int l=0;
//         int r=x;
//         int res=-1;
//         while(l<=r)
//         {
//             int mid=(l+r)/2;
//             if((long long )mid * mid<=x )
//             {
//                 res=mid;
//                 l=mid+1;
//             }
//             else r=mid-1;
//         }

//         return res;
//     }
// };

// class Solution
// {
// public:
//     int mySqrt(int x)
//     {
//         int res=-1;
//         int l=0;
//         int r=x/2+1;
//         while(l<=r)
//         {
//             int mid=(l+r)/2;
//             if((long long) mid *mid <=x)
//             {
//                 l=mid+1;
//                 res=mid;
//             }
//             else 
//             {
//                 r=mid-1;
//             }

//         }

//         return res;
//     }
// };

class Solution 
{
public:
    int mySqrt(int x) 
    {
        long l = 1;
        long r = x;
        if (x == 0) return 0;
        if (x == 1) return 1;
        while(l<r) 
        {
            int mid = (l+r)/2;
            if (x/mid == mid) 
            {
                return mid;
            } 
            else if (x/mid > mid) 
            {
                l = mid+1;
            } 
            else 
            {
                r = mid;
            }
        }
        return l-1;
    }
};


--------------------------------- 0128 / 2021 / yxc 


寻找平方根下取整，找到一个最大的y， 使得y平方小于等于x，所以最大的y要一直向右找

二分


class Solution {
public:
    int mySqrt(int x) {
        int l=0;
        int r=x;

        while(l<r)
        {
            int mid=l+1ll+r>>1;
            if( mid <=x/mid) l=mid;
            else r=mid-1;
        }

        return l;
    }
};







