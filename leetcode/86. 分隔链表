
86. 分隔链表

给定一个链表和一个特定值 x，对链表进行分隔，使得所有小于 x 的节点都在大于或等于 x 的节点之前。

你应当保留两个分区中每个节点的初始相对位置。

 

示例:

输入: head = 1->4->3->2->5->2, x = 3
输出: 1->2->2->4->3->5

------------------------------------------ 1225 /2020 yxc   两个链表的拼接，满足第一个要求放在第一个链表，第二个要求放在第二个链表，和合并有序链表类似

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 

class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if(!head) return NULL;

        auto p=new ListNode(-1);
        auto q=new ListNode(-1);
        auto tmp_p=p;// p的尾节点
        auto tmp_q=q; // q尾节点

        for(auto tp=head;tp;tp=tp->next)
        {
            if(tp->val < x) 
            {
                tmp_p->next=tp;
                tmp_p=tmp_p->next;
            }
            else 
            {
                tmp_q->next=tp;
                tmp_q=tmp_q->next;
            }
        }
       
        tmp_p->next=q->next;

        tmp_q->next = NULL;
        return p->next;
    }
};



