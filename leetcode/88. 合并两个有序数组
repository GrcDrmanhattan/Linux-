88. 合并两个有序数组

给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。

 
说明：

初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。
你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。
 

示例：

输入：
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

输出：[1,2,2,3,5,6]
 

提示：

-10^9 <= nums1[i], nums2[i] <= 10^9
nums1.length == m + n
nums2.length == n

-------------------------------  1225/ 2020 /yxc

双指针 On，每次将两个数组大的值从末尾插入，这样就不会覆盖住nums1原来的数


class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
    
        int k=n+m-1; // 从末尾开始放入数字
        int i=m-1;
        int j=n-1;

        while(i>=0 && j>=0 )
        {
            if(nums1[i] >= nums2[j]) nums1[k--]=nums1[i--];
            else nums1[k--]= nums2[j--];
        }

        while(j>=0) nums1[k--]=nums2[j--];
    }
};


------------------------- 0327 / 2021/  

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int k=m+n-1;
        int i=m-1;
        int j=n-1;

        while(i>=0 && j>=0){
            if(nums1[i] >= nums2[j]) nums1[k--]=nums1[i--];
            else nums1[k--]=nums2[j--];
        }

        while(j>=0 ) nums1[k--]=nums2[j--];
    }
};


