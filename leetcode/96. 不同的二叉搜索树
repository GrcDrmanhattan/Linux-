96. 不同的二叉搜索树

给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？

示例:

输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3



---------------------- 0314 / 2021  yxc




// 公式（Cn,2n)/(n+1)

// 递归，时间On^2,空间On

当给定的长度固定时，对应的二叉搜索树的情况数量也一定

// f[n] 表示n个节点的树有多少种，长度是n的树有多少种


// 左边 1， j-1，长度， j-1-1+1 = j-1
// 右边 j+1，i， 长度， i-j-1+1 = i-j 

class Solution {
public:
    int numTrees(int n) {
        vector<int> f(n+1);
        f[0]=1;

        for(int i=1;i<=n;++i)
            for(int j=1;j<=i;++j)
                f[i] += f[j-1] * f[i-j];

        return f[n];
    }
};


--------------- 0314/  


卡特兰数



class Solution {
public:
    int numTrees(int n) {
        if (n <= 0) return 0;

        long long res = 1;
        for (int i = 1; i <= n; ++i){
            res = res * (i + n) / i ;
        }

        return res / (n + 1);
    }
};




