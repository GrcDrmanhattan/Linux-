1116. 马走日
题目描述
马在中国象棋以日字形规则移动。

请编写一段程序，给定 n∗m
大小的棋盘，以及马的初始位置 (x，y)

，要求不能重复经过棋盘上的同一个点，计算马可以有多少途径遍历棋盘上的所有点。
输入格式

第一行为整数 T

，表示测试数据组数。

每一组测试数据包含一行，为四个整数，分别为棋盘的大小以及初始位置坐标 n,m,x,y
。

样例
1
5 4 0 0
输出：32

***************************************************.    全局dfs 要恢复现场
 
#include<iostream>
#include<algorithm>
#include<cstring>

using namespace std;

const int N=10;

bool st[N][N];

int n,m;
int x,y;

int ans;

int dx[]={1,2,2,1,-1,-2,-2,-1};
int dy[]={-2,-1,1,2,2,1,-1,-2};


void dfs(int x,int y,int cnt)
{
    //正在搜第cnt个点
    
    if(cnt==n*m)
    {
        ans++;
        return ;
    }
    
    st[x][y]=true;
    
    for(int i=0;i<8;++i)
    {
        int a=x+dx[i];
        int b=y+dy[i];
        if(a>=0 && a<n && b>=0 && b<m && !st[a][b])
        {
            dfs(a,b,cnt+1);
        }
        
        // if(a<0 || a>=n || b<0 || b>=m) continue;
        // if(st[a][b]) continue;
        
        // dfs(a,b,cnt+1);
    }
    
    st[x][y]=false;
}


int main()
{
    int t;
    cin>>t;
    
    while(t--)
    {
        cin>>n>>m>>x>>y;
        
        ans=0;
        dfs(x,y,1);
        
        printf("%d\n",ans);
    }
    
    return 0;
}

//******************************************

#include<iostream>
#include<algorithm>
#include<cstring>

using namespace std;
const int N=10;

int t;
int n,m;
int x,y;

int ans;
bool st[N][N];

int dx[]={1,2,2,1,-1,-2,-2,-1};
int dy[]={-2,-1,1,2,2,1,-1,-2};


void dfs(int x,int y,int cnt)
{
    if(cnt==n*m)
    {
        ans++;
        return ;
    }
    st[x][y]=true;
    
    for(int i=0;i<8;++i)
    {
        int a=x+dx[i];
        int b=y+dy[i];
        
        if(a>=0 && a<n && b>=0 && b<m &&!st[a][b])
        {
            dfs(a,b,cnt+1);
        }
    }
    
    st[x][y]=false;
    
}

int main()
{
    cin>>t;
    while(t--)
    {
        cin>>n>>m>>x>>y;
        
        ans=0;
        dfs(x,y,1);
    
        cout<<ans<<endl;    
    }
    
    return 0;
}

