27. 数值的整数次方
实现函数double Power(double base, int exponent)，求base的 exponent次方。

不得使用库函数，同时不需要考虑大数问题。

注意：

不会出现底数和指数同为0的情况
当底数为0时，指数一定为正
样例1
输入：10 ，2

输出：100
样例2
输入：10 ，-2  

输出：0.01

----------------------------------------------

//快速幂

class Solution {
public:
    double Power(double b, int e) {
        typedef  long long ll;
        double res=1;
        bool f= e<0;
        
        for(ll k=abs(e);k;k>>=1)
        {
            if( k&1 == 1) res*=b; //   每次乘以当前位为1，所对应的数
            
            b*=b;//往右移动一位后，b每次也变为二倍
        }
        
        if(f) res=1/res;
        return res;
    }
};


1213

class Solution {
public:
    double Power(double b, int e) {
        bool f= e<0;
    
        double res = 1;
        
        for(int k = abs(e); k ;k>>=1)
        {
            if( k&1 == 1) res *= b;
            b*=b;
        }
        
        if(f) res=1/res;
        return res;
    }
};


