39. 对称的二叉树

请实现一个函数，用来判断一棵二叉树是不是对称的。

如果一棵二叉树和它的镜像一样，那么它是对称的。

样例
如下图所示二叉树[1,2,2,3,4,4,3,null,null,null,null,null,null,null,null]为对称二叉树：
    1
   / \
  2   2
 / \ / \
3  4 4  3

如下图所示二叉树[1,2,2,null,4,4,3,null,null,null,null,null,null]不是对称二叉树：
    1
   / \
  2   2
   \ / \
   4 4  3
   
   
   
   -----------------------------   -----------------------------   ----------------------------- yxc
   
   
   /**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 

class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(!root) return true;
        
        return dfs(root->left, root->right) ;//判断完根节点后，判断左右子树
    }
    
    bool dfs(TreeNode* p1, TreeNode* p2)
    {
        if(!p1 || !p2) return !p1 && !p2;
        
        return p1->val == p2->val && dfs(p1->left, p2->right) && dfs(p1->right, p2->left);
    }
};

