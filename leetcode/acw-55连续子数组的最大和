连续子数组的最大和

输入一个 非空 整型数组，数组里的数可能为正，也可能为负。

数组中一个或连续的多个整数组成一个子数组。

求所有子数组的和的最大值。

要求时间复杂度为O(n)。

样例
输入：[1, -2, 3, 10, -4, 7, 2, -5]

输出：18

---------------------------------

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int res=0;
        int n=nums.size();
        
        vector<int> dp(n+1);
        dp[1]=nums[0];
        res=dp[1];
        
        for(int i=2;i<=n;++i)
        {
            dp[i]=nums[i-1];
            dp[i]=max(dp[i], dp[i-1]+nums[i-1]);
            res=max(res, dp[i]);
            
        }
       
        return res;
    }
};


