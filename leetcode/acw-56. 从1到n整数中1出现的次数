56. 从1到n整数中1出现的次数

输入一个整数n，求从1到n这n个整数的十进制表示中1出现的次数。

例如输入12，从1到12这些整数中包含“1”的数字有1，10，11和12，其中“1”一共出现了5次。

样例
输入： 12
输出： 5


---------------------------------------    1213 yxc 

/*
按每一位计算
ab  c  def
假如当前看c贡献多少个1，组成多少个数使得c位正好是1，并且不超出范围

1  左边是0～ab-1， 右边则可以是 0 ～ 999，总计ab * 1000
2. 左边是 ab ， 如果c实际是0，没有贡献
                如果c实际是1，则贡献 0～def 个1
                如果c实际大于1 ，则0 ～ 999 ，将c位设置为1，进行贡献

*/

class Solution {
public:
    int numberOf1Between1AndN_Solution(int n) {
        int res;
        if(!n) return 0;
        
        vector<int> num;
        while(n)
        {
            num.push_back(n%10);
            n/=10;
        }
        
        for(int i=num.size()-1;i>=0;--i)
        {
            int left=0;
            int right=0;
            int t=1;// right 有几位就是10的几次幂
            
            for(int j=num.size()-1;j>i;--j) left = left*10 + num[j];
            for(int j=i-1;j>=0;--j) right = right*10 + num[j], t*=10;
            
            // 第i位之前的，不足最大的
            res += left * t;
            
            // 第i位之前等于最大的了
            
            if(num[i] == 1) res += (right + 1);
            else if (num[i] > 1)  res += t;
        }
        
        return res;
    }
};



