61. 最长不含重复字符的子字符串
请从字符串中找出一个最长的不包含重复字符的子字符串，计算该最长子字符串的长度。

假设字符串中只包含从’a’到’z’的字符。

样例
输入："abcabc"

输出：3


------------------ 双指针 

//双指针，一直向右枚举j，最后对于每个j都有一个i，ij区间就是不重复元素，找到最长的就是res

class Solution {
public:
    int longestSubstringWithoutDuplication(string s) {
        int res;
        unordered_map<char ,int > cnt;
        
        for(int i=0 , j=0;j<s.size();++j) // ij两个指针维护一个区间，里面是不重复元素
        {
            // 遇到出现重复的字符，处理区间，这样对于每一个枚举的j，i都是最远不含重复元素的位置
            
            if(++cnt[s[j]] > 1) // 次数先加一
            {
                while(cnt[s[i]] == 1)  // 当s[i]次数不等于1，也就是找到了重复的元素了：新加入的s[j],
                {
                    cnt[s[i]]--;
                    i++;
                }
                
                cnt[s[i]]--; // 使得s[j]的次数减少为1
                i++;
            }
            
            // 一直没遇见次数超过1的或者处理后次数不超过1，计算res
            res=max(res,j-i+1);// 
        }
        
        return res;
    }
};


----------------------  1222  yxc nb  及时复习


class Solution {
public:
    int longestSubstringWithoutDuplication(string s) {
        int res=0;
        if(s.size() == 0) return 0;
        unordered_map<char ,int> cnt;
        
        for(int i=0,j=0;i<s.size();++i)
        {
            cnt[s[i]]++;
            
            while(cnt[s[i]] > 1)
            {
                cnt[s[j]]--;
                j++;
            }
            
            res=max(res,i-j+1);
        }
        
        return res;
    }
};



