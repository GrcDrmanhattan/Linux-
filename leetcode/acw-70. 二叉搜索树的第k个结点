70. 二叉搜索树的第k个结点

给定一棵二叉搜索树，请找出其中的第k小的结点。

你可以假设树和k都存在，并且1≤k≤树的总结点数。

样例
输入：root = [2, 1, 3, null, null, null, null] ，k = 3

    2
   / \
  1   3

输出：3

---------------------------  时间复杂度On

1217

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* kthNode(TreeNode* root, int k) {
        vector<int> res;
        dfs(root, res);
        // cout<<res[k-1]<<endl;
        return new TreeNode(res[k-1]);
    }
    
    vector<int> dfs(TreeNode* rt, vector<int> &res)
    {
        if(!rt) return {};
        dfs(rt->left, res);
        res.push_back(rt->val);
        dfs(rt->right, res);
        return res;
    }
};

-----------------------------   yxc


class Solution {
public:
    TreeNode* res;
    TreeNode* kthNode(TreeNode* root, int k) {
        dfs(root ,k);
        return res;
    }
    
    void dfs(TreeNode* rt, int &k)
    {
        if(!rt) return ;
        dfs(rt->left, k);
        k--;
        if(!k) res=rt;
        
        if(k>0) dfs(rt->right, k);
    }
};


