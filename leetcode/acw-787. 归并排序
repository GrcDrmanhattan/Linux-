给定你一个长度为n的整数数列。

请你使用归并排序对这个数列按照从小到大进行排序。

并将排好序的数列按顺序输出。

输入格式

输入共两行，第一行包含整数 n。

第二行包含 n 个整数（所有整数均在1~109
范围内），表示整个数列。

输出格式

输出共一行，包含 n 个整数，表示排好序的数列。

数据范围

1≤n≤100000

输入样例：

5
3 1 2 4 5
输出样例：

1 2 3 4 5

########################

#include <iostream>

using namespace std;

const int N=1e6+10;
int n;
int q[N],tmp[N];

void merge_sort(int q[],int l,int r)
{
    if(l>=r) return ;
    
    int mid=l+r>>1;
    int i=l;
    int j=mid+1;
    
    int k=0;
    //先递归
    merge_sort(q,l,mid);
    merge_sort(q,mid+1,r);
    //后合并
    while(i<=mid && j<=r)
    {
        if(q[i]<=q[j]) tmp[k++]=q[i++];
        else tmp[k++]=q[j++];
    }
    
    while(i<=mid) tmp[k++]=q[i++];
    while(j<=r) tmp[k++]=q[j++];
    
    for(i=l,j=0;i<=r;++i,++j) q[i]=tmp[j];
}


int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;++i) scanf("%d",&q[i]);
    
    merge_sort(q,0,n-1);
    
    for(int i=0;i<n;++i) printf("%d ",q[i]);
    
    
    return 0;
}


----------------- 1228 /2020  O(nlogn)



#include<iostream>
#include<algorithm>

using namespace std;

const int N=1e5+10;

int a[N];
int tmp[N];
int n;

void mer(int a[], int l,int r)
{
    if(l>=r) return ;
    int mid=(l+r)>>1;
    
    mer(a, l , mid);
    mer(a, mid+1 , r);
    
    int k=0;
    int i=l;
    int j=mid+1;
 
    while(i<= mid && j<= r)
    {
        if(a[i] <= a[j]) tmp[k++]=a[i++];
        else tmp[k++] = a[j++];
    }
    
    while(i<=mid) tmp[k++] =a[i++];
    while(j<=r) tmp[k++] = a[j++];
    
    for(int i=l, t=0; i<=r;++i, ++t) a[i] =tmp[t];
}


int main()
{
    cin>>n;
    for(int i=0;i<n;++i) cin>>a[i];
    
    mer(a, 0, n-1);
    
    for(int i=0;i<n;++i) cout<<a[i]<<' ';
    cout<<endl;
    return 0;
    
}


