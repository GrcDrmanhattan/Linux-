输入一个长度为n的整数序列。

接下来输入m个操作，每个操作包含三个整数l, r, c，表示将序列中[l, r]之间的每个数加上c。

请你输出进行完所有操作后的序列。

输入格式

第一行包含两个整数n和m。

第二行包含n个整数，表示整数序列。

接下来m行，每行包含三个整数l，r，c，表示一个操作。

输出格式

共一行，包含n个整数，表示最终序列。

数据范围

1≤n,m≤100000
,
1≤l≤r≤n
,
−1000≤c≤1000
,
−1000≤整数序列中元素的值≤1000

输入样例：

6 3
1 2 2 1 2 1
1 3 1
3 5 1
1 6 1
输出样例：

3 4 5 3 4 2

######################################################################################

#include<iostream>

using namespace std;

const int N=1e6+10;

int n,m;
int a[N],b[N];


//对于差分数组，不需要考虑构造，只需考虑怎么更新就可以，insert函数既可以构造也可以更新

//利用insert操作构造差分数组、
//对于a数组刚开始为0，则差分数组也为0，但a数组实际含有数字，则相当于在差分数组中每一个位置插入a的每一个元素，进而能够构造差分数组


//insert函数对a数组的影响
//a[1,l-1]无影响，a[l,r]每一个a都加c，a[r+1,n]无影响

void insert(int l,int r,int c)//利用差分数组b[]保证a[lr]区间内的每一个ai，ai+1，....都加上c
{
    b[l]+=c;
    b[r+1]-=c;
}

int main()
{
    scanf("%d%d",&n,&m);
    
    for(int i=1;i<=n;++i) scanf("%d",&a[i]);
    
    for(int i=1;i<=n;++i) insert(i,i,a[i]);// 相当于间接的--构造差分序列b
    
    while(m--)
    {
        int l,r,c;
        scanf("%d%d%d",&l,&r,&c);
        
        insert(l,r,c);//对差分序列b进行处理
    }
    
    for(int i=1;i<=n;++i) b[i] +=b[i-1];//前缀和，求得原序列
    
    for(int i=1;i<=n;++i) printf("%d ",b[i]);
    
    return 0;
}




// #include<iostream>
// using namespace std;
// const int N=100010;
// int a[N],b[N];//a[N]为原序列  b[N]为差分序列
// int main()
// {
//     //前缀和的差分=原序列 差分的前缀和=原序列,
//     int n,m;
//     cin>>n>>m;
//     for(int i=1;i<=n;i++) cin>>a[i];//读取原序列的值
//     //构造差分序列 由a[i]=b[1]+b[2]+...+b[i]得出b[i]=a[i]-a[i-1]
//     for(int i=1;i<=n;i++) b[i]=a[i]-a[i-1];
//     while(m--)//对差分序列进行处理
//     {
//         int l,r,c;
//         cin>>l>>r>>c;
//         b[l]+=c;
//         b[r+1]-=c;
//     }
//     for(int i=1;i<=n;i++)//对差分序列进行求和来获得原序列,∵差分序列的前缀和=原序列
//     {
//         b[i]+=b[i-1];//s[i]=s[i-1]+a[i]
//         cout<<b[i]<<" ";
//     }
//     return 0;
// }


-------------------------------------- 1229 /2020 /


#include<iostream>

using namespace std;

const int N=1e5+10;

int a[N];
int b[N];// 差分数组

int n,m,q;


void insert(int l,int r,int c)
{
    b[l] += c;
    b[r+1] -= c;
}


int main()
{
    cin>>n>>m;
    for(int i=1;i<=n;++i) cin>>a[i];
    
    for(int i=1;i<=n;++i) insert(i, i ,a[i]); // 构造差分
    
    while(m--)
    {
        int l,r,c;
        cin>>l>>r>>c;
        
        insert(l ,r, c);// 操作完a数组已经变化了，怎么输出呢，对差分前缀和 就是原数组了
    }
    
    for(int i=1;i<=n;++i) b[i] += b[i-1];
    
    for(int i=1;i<=n;++i) cout<<b[i]<<' ';
    
    return 0;
}


