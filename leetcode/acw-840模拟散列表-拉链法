维护一个集合，支持如下几种操作：

1.“I x”，插入一个数x；
2.“Q x”，询问数x是否在集合中出现过；
现在要进行N次操作，对于每个询问操作输出对应的结果。
输入格式
第一行包含整数N，表示操作数量。

接下来N行，每行包含一个操作指令，操作指令为”I x”，”Q x”中的一种。

输出格式
对于每个询问指令“Q x”，输出一个询问结果，如果x在集合中出现过，则输出“Yes”，否则输出“No”。

每个结果占一行。

数据范围
1≤N≤105
−109≤x≤109

样例
输入:
5
I 1
I 2
I 3
Q 2
Q 5
输出:
Yes
No

################################################3  

#include<iostream>
#include<cstring>

using namespace std;

// const int N=1e5+10;
const int N=1e5+3;//100003 质数。冲突概率小

int h[N];//映射后的位置在h数组，每一个槽位
int e[N];
int ne[N];
int idx;

void insert(int x)//拉链法
{
    int k=(x % N + N) % N;//保证取模后结果为正数
    
    e[idx]=x;//插入到链表中，在k节点后插入
    ne[idx]=h[k];
    h[k]=idx;
    idx++;
            
}

// 82683010 物业 

bool find(int x)
{
    int k= (x%N+N)%N;
    
    for(int i=h[k];i!=-1;i=ne[i])
    {
        if(e[i]==x)
        {
            return true;
        }
    }
    
    return false;
}


int main()
{
    
    // for(int i=1e5;;i++)//寻找大于1e5的第一个质数
    // {
    //     bool flag=true;
    //     for(int j=2;j*j<=i;++j)
    //     {
    //         if(i%j==0)
    //         {
    //             flag=false;
    //             break;
    //         }
    //     }
        
    //     if(flag)
    //     {
    //         cout<<i<<endl;
    //         break;
    //     }
    // }
    
    
    int n;
    scanf("%d",&n);
    
    memset(h,-1,sizeof(h));
    
    
    while(n--)
    {
        char op[2];
        int x;
        scanf("%s%d",op,&x);
        
        if(op[0]=='I')
        {
            insert(x);
        }
        else
        {
            if(find(x))
            {
                puts("yes");
                
            }
            else
            {
                puts("no");
            }
        }
        
    }
    
    return 0;
}

------------------------- 0108 / 2021 / 

// 拉链法

#include<iostream>
#include<cstring>

using namespace std;

const int N=1e5+3 ; // 质数

int h[N];
int idx;
int e[N];
int ne[N];

int n;


void insert(int x)
{
    int k=((x%N)+N)%N;
    
    e[idx]=x;
    ne[idx]=h[k];
    h[k]=idx;
    idx++;
}

bool query(int x)
{
    int k=((x%N)+N) % N;
    
    for(int i=h[k];i!=-1;i=ne[i])
        if(e[i]==x) return true;
        
    return false;
}

int main()
{
    cin>>n;
    
    memset(h, -1,sizeof(h));
    
    while(n--)
    {
        char op[2];
        int x;
        scanf("%s%d", &op, &x);
        
        if(op[0]=='I') insert(x);
        else 
        {
            if(query(x)) puts("Yes");
            else puts("No");
        }
    }
    
    
    return 0;
}

