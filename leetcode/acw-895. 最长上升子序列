895. 最长上升子序列
给定一个长度为N的数列(w[N])，求数值严格单调递增的子序列的长度最长是多少。

样例
输入格式
第一行包含整数N。

第二行包含N个整数，表示完整序列。

输出格式
输出一个整数，表示最大长度。

数据范围
1 ≤ N ≤ 1000，
−1e9 ≤ 数列中的数 ≤ 1e9

输入样例：

7
3 1 2 1 8 5 6
输出样例：

4

#########################################################

#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;

const int N=1010;

int f[N];
int a[N];
int n;

int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;++i) scanf("%d",&a[i]);
    
    for(int i=1;i<=n;++i)
    {
        f[i]=1;//最少只有一个数
        for(int j=1;j<i;++j)
            if(a[j]<a[i]) f[i]=max(f[i],f[j]+1);
    }
        
    
    int res=0;
    for(int i=1;i<=n;++i) res=max(res,f[i]);
    printf("%d\n",res);
    return 0;
}

########################################################################### 输出最大序列，

#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;

const int N=1010;

int f[N];
int a[N];
int n;
int g[N];//g[i]=j,i从j转移过来

int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;++i) scanf("%d",&a[i]);
    
    for(int i=1;i<=n;++i)
    {
        f[i]=1;//最少只有一个数
        g[i]=0;//只有一个数，最少从0转移过来
        
        for(int j=1;j<i;++j)
            if(a[j]<a[i]) 
            {
                if(f[i]<f[j]+1)
                {
                    f[i]=f[j]+1;
                    g[i]=j;
                }
            }
    }
    
    int k=1;
    for(int i=1;i<=n;++i)
    {
        if(f[k]<f[i]) k=i;//k记录最大长度的下标
    }
    
    printf("%d\n",f[k]);//输出最大长度
    
    //输出递增的序列，倒序输出
    for(int i=0,len=f[k];i<len;++i)
    {
        printf("%d ",a[k]);
        k=g[k];
    }
    
    return 0;
}






