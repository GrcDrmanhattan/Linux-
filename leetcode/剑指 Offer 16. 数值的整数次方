剑指 Offer 16. 数值的整数次方

实现函数double Power(double base, int exponent)，求base的exponent次方。不得使用库函数，同时不需要考虑大数问题。

 

示例 1:

输入: 2.00000, 10
输出: 1024.00000
示例 2:

输入: 2.10000, 3
输出: 9.26100
示例 3:

输入: 2.00000, -2
输出: 0.25000
解释: 2-2 = 1/22 = 1/4 = 0.25
 

说明:

-100.0 < x < 100.0
n 是 32 位有符号整数，其数值范围是 [−231, 231 − 1] 。


---------------------

class Solution {
public:
    double myPow(double x, int n) {
        double res=1;
        typedef long long ll;
        
        for(ll k=abs((ll)n);k;k>>=1)
        {
            if(k&1==1) res*=x;
            x*=x;
        }

        bool f= n<0;
        if(f) res=1/res;
        return res;
    }
};


----------------------------------- 0214 / 2021 / 


class Solution {
public:
    double myPow(double x, int n) {
        typedef long long ll;
        double res=1;

        for(ll k= abs((ll) n) ; k ;k>>=1) // 先预处理x^(2^0), x^(2^1), x^(2^2)...，如果当前位是1，就乘到res
        {
            if(k&1) res *= x;

            x*=x;
        }
        if(n<0) res = 1/res;
        return res;
    }
};


