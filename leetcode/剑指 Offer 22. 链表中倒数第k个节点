剑指 Offer 22. 链表中倒数第k个节点

输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。
例如，一个链表有6个节点，从头节点开始，它们的值依次是1、2、3、4、5、6。这个链表的倒数第3个节点是值为4的节点。

 

示例：

给定一个链表: 1->2->3->4->5, 和 k = 2.

返回链表 4->5.

#################################################################

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution 
{
public:
    ListNode* getKthFromEnd(ListNode* head, int k) 
    {
        if(head==NULL || k==0) return NULL;

        ListNode* fast=head;
        ListNode* slow=head;

        for(int i=0;i<k-1;++i) fast=fast->next;//快指针刚开始在head坐标0，循环后，从head开始前进k-1，坐标k-1，距离slowk-1
        
        while(fast->next != NULL) //当fast-next==null,也就是fast在尾节点，此时在坐标n，slow坐标在k-1，他们距离n-k+1
        {
            fast=fast->next;
            slow=slow->next;
        }

        return slow;

    }
};


------------------------- 0216 / 2021 / self 


class Solution {
public:
    ListNode* getKthFromEnd(ListNode* head, int k) {
        int n=0;
        for(auto p=head; p; p=p->next) n++;

        auto p=head;
        for(int i=0;i<n-k;++i) p=p->next;

        return p;

    }
};




