剑指 Offer 32 - III. 从上到下打印二叉树 III

请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。

 

例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：

[
  [3],
  [20,9],
  [15,7]
]
 

提示：

节点总数 <= 1000

---------------------------- 0216  / 2021/ 


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(!root) return res;

        queue<TreeNode*> q;
        q.push(root);
        int l=0;

        while(q.size())
        {
            l++;
            int n=q.size();
            vector<int> tmp;
            
            while(n--)
            {
                auto t=q.front();
                q.pop();
                tmp.push_back(t->val);

                if(t->left) q.push(t->left);
                if(t->right) q.push(t->right);

            }

            if(l%2==0) reverse(tmp.begin(), tmp.end());
            res.push_back(tmp);
        }

        return res;
    }
};


