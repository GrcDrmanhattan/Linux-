剑指 Offer 33. 二叉搜索树的后序遍历序列

输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回 true，否则返回 false。假设输入的数组的任意两个数字都互不相同。

 

参考以下这颗二叉搜索树：

     5
    / \
   2   6
  / \
 1   3
示例 1：

输入: [1,6,3,2,5]
输出: false
示例 2：

输入: [1,3,2,6,5]
输出: true
 

提示：

数组长度 <= 1000


---------------------------------- 0201 2021 / yxc 



class Solution {
public:
    vector<int> s;
    bool verifyPostorder(vector<int>& postorder) {
        if(postorder.empty()) return true;
        s=postorder;
        return dfs(0, postorder.size()-1);   
    }

    bool dfs(int l , int r)
    {
        if(l>=r) return true;
        int rt=s[r];

        int k=l;
        while(k<r && s[k]<rt)k++;

        for(int i=k;i<r;++i)
        {
            if(s[i]<rt) return false;
        }

        return dfs(l, k-1) &&  dfs(k , r-1);
    }
};



--------------------- 0211/ 2021/ x

class Solution {
public:
    vector<int>g;
    bool verifyPostorder(vector<int>& postorder) {
        if(postorder.empty()) return true;
        g=postorder;
        return dfs(0, g.size()-1);
    }

    bool dfs(int l, int r)
    {
        if(l>=r) return true;
        int rt=g[r];

        int k=l; // k=0
        while(k<g.size() && g[k]<rt) k++;

        for(int i=k;i<r;++i) // i要小于r
            if(g[i]<rt) return false;

        return dfs(l, k-1)&& dfs(k, r-1);
    }
};



