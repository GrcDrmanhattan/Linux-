剑指 Offer 51. 数组中的逆序对

在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组，求出这个数组中的逆序对的总数。

 

示例 1:

输入: [7,5,6,4]
输出: 5
 

限制：

0 <= 数组长度 <= 50000

########################################################################

typedef long long LL;

//逆序对 分为在区间左，在区间右，一个在区间左，一个在区间右
//三种情况
//
//0826 yxc题解

class Solution 
{
public:
    vector<int> tmp;
    //排序并返回区间lr的逆序对数量
    LL merge_sort(vector<int>&q,int l,int r)//放在main函数之前
    {
        if(l>=r) return 0;

        int mid=(l+r) >> 1;
        LL res=merge_sort(q,l,mid)+merge_sort(q,mid+1,r);

        int k=0;
        int i=l;
        int j=mid+1;

        while(i<=mid && j<=r)//归并已经有序的两个区间
        {
            if(q[i]<=q[j]) 
            {
                tmp[k++]=q[i++];
            }
            else//严格大于qj，在归并过程中，每次qi>qj,增加res
            {
                tmp[k++]=q[j++];
                res+= mid-i+1;
            }
        }

        while(i<=mid) tmp[k++]=q[i++];
        while(j<=r) tmp[k++]=q[j++];

        for(int i=l,j=0;i<=r;++i,++j) q[i]=tmp[j];

        return res;
    }

    int reversePairs(vector<int>& nums) 
    {
        tmp.resize(nums.size());
        return merge_sort(nums,0,nums.size()-1);
    }
};

